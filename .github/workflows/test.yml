name: Twitch UI Automation Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Verify Python environment
      run: |
        python3 --version
        which python3
        python3 -m pip --version
        ls -la requirements.txt
        echo "Contents of requirements.txt:"
        cat requirements.txt
    
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
        python3 -c "import pytest; print('pytest version:', pytest.__version__)"
        python3 -c "import selenium; print('selenium version:', selenium.__version__)"
        python3 -c "import allure; print('allure imported successfully')"
        python3 -c "import webdriver_manager; print('webdriver-manager imported successfully')"
        python3 -c "import dotenv; print('python-dotenv imported successfully')"
    
    - name: Create necessary directories
      run: |
        mkdir -p screenshots reports allure-results
    
    - name: Run smoke tests
      run: |
        python3 run_tests.py --type smoke --headless
      env:
        HEADLESS: true
    
    - name: Run regression tests
      run: |
        python3 run_tests.py --type regression --headless
      env:
        HEADLESS: true
    
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-${{ matrix.python-version }}
        path: |
          reports/
          screenshots/
        retention_days: 30
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ matrix.python-version }}
        path: |
          allure-results/
        retention_days: 30

  test-headed:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y wget gnupg xvfb
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
    
    - name: Verify Python environment
      run: |
        python3 --version
        which python3
        python3 -m pip --version
        ls -la requirements.txt
        echo "Contents of requirements.txt:"
        cat requirements.txt
    
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install -r requirements.txt
        python3 -c "import pytest; print('pytest version:', pytest.__version__)"
        python3 -c "import selenium; print('selenium version:', selenium.__version__)"
        python3 -c "import allure; print('allure imported successfully')"
        python3 -c "import webdriver_manager; print('webdriver-manager imported successfully')"
        python3 -c "import dotenv; print('python-dotenv imported successfully')"
    
    - name: Create necessary directories
      run: |
        mkdir -p screenshots reports allure-results
    
    - name: Run tests with display (headed mode)
      run: |
        xvfb-run -a python3 run_tests.py --type all --verbose
      env:
        DISPLAY: :99
        HEADLESS: false
    
    - name: Upload test reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-reports-headed
        path: |
          reports/
          screenshots/
        retention_days: 30